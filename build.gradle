buildscript {
    ext {
        springBootVersion = '1.3.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'idea'

jar {
    baseName = 'aurora'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.security.oauth:spring-security-oauth2')
    compile('com.github.derjust:spring-data-dynamodb:4.2.0')
    compile 'org.projectlombok:lombok:1.16.6'
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

bootRun {
    if (System.getProperty('GOOGLE_CLIENT_ID')) {
        systemProperties = [
                GOOGLE_CLIENT_ID         : System.getProperty('GOOGLE_CLIENT_ID'),
                GOOGLE_CLIENT_SECRET     : System.getProperty('GOOGLE_CLIENT_SECRET'),
                AMAZON_DYNAMODB_ACCESSKEY: System.getProperty('AMAZON_DYNAMODB_ACCESSKEY'),
                AMAZON_DYNAMODB_SECRETKEY: System.getProperty('AMAZON_DYNAMODB_SECRETKEY')
        ]
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
